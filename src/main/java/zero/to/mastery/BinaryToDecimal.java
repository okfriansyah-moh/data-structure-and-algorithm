package zero.to.mastery;

import java.math.BigInteger;

public class BinaryToDecimal {
    public int solution(String S) {
        // write your code in Java SE 11
        BigInteger v = binaryToDecimal(S);
        return howMuchOperationsToCalculateV(v);
    }

    private int howMuchOperationsToCalculateV(BigInteger v) {
        int counter = 0;
        while (!BigInteger.ZERO.equals(v)) {
            if (v.mod(new BigInteger("2")).equals(BigInteger.ZERO)) {
                v = v.divide(new BigInteger("2"));
                counter++;
            } else {
                v = v.subtract(new BigInteger("1"));
                counter++;
            }
        }
        return counter;
    }

    private BigInteger binaryToDecimal(String s) {
        BigInteger n = new BigInteger(s);
        BigInteger result = BigInteger.ZERO;
        int p = 0;
        while(!BigInteger.ZERO.equals(n))
        {
            result = result.add((n.mod(new BigInteger("10"))).multiply(new BigInteger("2").pow(p)));
            n = n.divide(new BigInteger("10"));
            p++;
        }
        return result;
    }

    public static void main(String args[]){
        String binaryString="111111111111111111111111" +
                "1111111111111111111111111111111111111111111111111" +
                "1111111111111111111111111111111111111111111111111111111" +
                "111111111111111111111111111111111111111111111111111111111" +
                "11111111111111111111111111111111111111111111111111111111111111" +
                "11111111111111111111111111111111111111111111111111111111111111" +
                "1111111111111111111111111111111111111111111111111111111111111" +
                "1111111111111111111111111111111111111111111111111111111111111" +
                "111111111111111111111111111111111111111111111111111111111111" +
                "1111111111111111111111111111111111111111111111111111111111111" +
                "11111111111111111111111111111111111111111111111111111111111" +
                "111111111111111111111111111111111111111111111111111111111111111" +
                "111111111111111111111111111111111111111111111111111111111111111" +
                "111111111111111111111111111111111111111111111111111111111111111" +
                "1111111111111111111111111111111111111111111111111111111111111" +
                "11111111111111111111111111111111111111111111111111111111111" +
                "11111111111111111111111111111111111111111111111111111111111" +
                "11111111111111111111111111111111111111111111111111111111111" +
                "111111111111111111111111111111111111111111111111111111111111" +
                "111111111111111111111111111111111111111111111111111111111111" +
                "111111111111111111111111111111111111111111111111111111111111" +
                "111111111111111111111111111111111111111111111111111111111111" +
                "1111111111111111111111111111111111111111111111111111111111111" +
                "111111111111111111111111111111111111111111111111111111111111" +
                "111111111111111111111111111111111111111111111111111111111111" +
                "111111111111111111111111111111111111111111111111111111111111" +
                "1111111111111111111111111111111111111111111111111111111111111" +
                "111111111111111111111111111111111111111111111111111111111111" +
                "111111111111111111111111111111111111111111111111111111111111" +
                "111111111111111111111111111111111111111111111111111111111111" +
                "111111111111111111111111111111111111111111111111111111111111111" +
                "111111111111111111111111111111111111111111111111111111111111111" +
                "111111111111111111111111111111111111111111111111111111111111111" +
                "11111111111111111111";
        BinaryToDecimal binaryToDecimal = new BinaryToDecimal();
        System.out.println(binaryToDecimal.solution(binaryString));
    }

}
